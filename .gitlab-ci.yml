### STAGES ###
stages:
  - test
  - build
  - review
  - deploy
  - release

### GLOBAL VARS ###
variables:
  IMAGE_NAME: registry.gitlab.com/${CI_PROJECT_PATH}
  IMAGE_NAME_COMMIT: registry.gitlab.com/${CI_PROJECT_PATH}/commits/${CI_PROJECT_NAME}:${CI_BUILD_REF}
  DOCKER_DRIVER: overlay2

### TEST STAGE ###
Yarn:
  stage: test
  image: node:8
  except:
    - chat
    - trigger
  before_script:
    - yarn
    - yarn global add codecov
  script:
    - yarn test
    - codecov

Docker:
  image: docker:stable
  services:
    - docker:dind
  except:
    - chat
    - trigger
  stage: test
  script: docker build .

### BUILD STAGE ###
Push Frontigrade Image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  only:
    - master@cloudigrade/frontigrade
  except:
    - tags@cloudigrade/frontigrade
    - chat
    - trigger
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull ${IMAGE_NAME}:latest || true
    - docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME_COMMIT} --tag ${IMAGE_NAME}:latest .
    - docker push ${IMAGE_NAME_COMMIT}
    - docker push ${IMAGE_NAME}:latest

Push Frontigrade Tagged Image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  only:
    - tags@cloudigrade/frontigrade
  except:
    - chat
    - trigger
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull ${IMAGE_NAME}:latest || true
    - docker build --cache-from ${IMAGE_NAME}:latest --tag ${IMAGE_NAME}:${CI_COMMIT_TAG} .
    - docker push ${IMAGE_NAME}:${CI_COMMIT_TAG}

### REVIEW STAGE ###
Deploy Review:
  stage: review
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
  only:
    - branches@cloudigrade/frontigrade
  except:
    - master@cloudigrade/frontigrade
    - tags@cloudigrade/frontigrade
    - chat
    - trigger
  before_script:
    - oc login --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - kontemplate template ocp/review.yaml -i frontigrade | oc apply -f -
    - oc start-build -F cloudireview-${CI_COMMIT_REF_SLUG}-frontigrade
    - if ! oc rollout status dc/cloudireview-${CI_COMMIT_REF_SLUG}-frontigrade; then oc rollout latest dc/cloudireview-${CI_COMMIT_REF_SLUG}-frontigrade && oc rollout status dc/cloudireview-${CI_COMMIT_REF_SLUG}-frontigrade; fi;
  environment:
    name: review/${CI_COMMIT_REF_NAME}
    url: https://cloudireview-${CI_COMMIT_REF_SLUG}.1b13.insights.openshiftapps.com
    on_stop: Clean Up Review

Clean Up Review:
  stage: review
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
  only:
    - branches@cloudigrade/frontigrade
  except:
    - master@cloudigrade/frontigrade
    - tags@cloudigrade/frontigrade
    - chat
    - trigger
  before_script:
    - oc login ${OPENSHIFT_URL} --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - oc delete bc,cm,dc,is,routes,secrets,svc -l gitlab-deployment="${CI_COMMIT_REF_SLUG}-frontigrade"
  when: manual
  environment:
    name: review/${CI_COMMIT_REF_NAME}
    action: stop

Review-Master:
  stage: review
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
  only:
    - chat
    - trigger
  except:
    - tags@cloudigrade/cloudigrade
  before_script:
    - oc login ${OPENSHIFT_URL} --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - >
      if [ -n "${CHAT_INPUT}" ]; then
        export FRONTIGRADE_REPO_REF=master
        export CI_COMMIT_REF_SLUG=master-${CHAT_INPUT}
        export FRONTIGRADE_ROUTE_HOST=${CI_COMMIT_REF_SLUG}.1b13.insights.openshiftapps.com
        export DEPLOYMENT_PREFIX=${CI_COMMIT_REF_SLUG}-
        export GITLAB_DEPLOYMENT=${CI_COMMIT_REF_SLUG}-frontigrade
      else
        echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nPlease provide a name for the deployment.\nsection_end:$( date +%s ):chat_reply\r\033[0K"
        exit 1
      fi
    - kontemplate template ocp/review.yaml -i frontigrade | oc apply -f -
    - oc start-build -F ${CI_COMMIT_REF_SLUG}-frontigrade
    - if ! oc rollout status dc/${CI_COMMIT_REF_SLUG}-frontigrade; then oc rollout latest dc/${CI_COMMIT_REF_SLUG}-frontigrade && oc rollout status dc/${CI_COMMIT_REF_SLUG}-frontigrade; fi;
    - echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nDeployed ${CHAT_INPUT}, available at https://${CI_COMMIT_REF_SLUG}.1b13.insights.openshiftapps.com\nsection_end:$( date +%s ):chat_reply\r\033[0K"
  environment:
    name: review/master-${CHAT_INPUT}
    url: https://${CI_COMMIT_REF_SLUG}.1b13.insights.openshiftapps.com
    on_stop: Clean-up-master

Clean-up-master:
  stage: review
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
  only:
    - chat
    - trigger
  except:
    - tags@cloudigrade/cloudigrade
  before_script:
    - oc login ${OPENSHIFT_URL} --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - >
      if [ -n "${CHAT_INPUT}" ]; then
        export FRONTIGRADE_REPO_REF=master
        export CI_COMMIT_REF_SLUG=master-${CHAT_INPUT}
        export FRONTIGRADE_ROUTE_HOST=${CI_COMMIT_REF_SLUG}.1b13.insights.openshiftapps.com
        export DEPLOYMENT_PREFIX=${CI_COMMIT_REF_SLUG}-
        export GITLAB_DEPLOYMENT=${CI_COMMIT_REF_SLUG}-frontigrade
      else
        echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nPlease provide a name for the deployment.\nsection_end:$( date +%s ):chat_reply\r\033[0K"
        exit 1
      fi
    - oc delete bc,dc,is,routes,secrets,svc -l gitlab-deployment="${CI_COMMIT_REF_SLUG}-frontigrade"
    - echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nFrontigrade master review - ${CHAT_INPUT} - cleaned up.\nsection_end:$( date +%s ):chat_reply\r\033[0K"
  when: manual
  environment:
    name: review/master-${CHAT_INPUT}
    action: stop

### DEPLOY STAGE ###
### MASTER ONLY ###
Deploy to Test:
  stage: deploy
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
    FRONTIGRADE_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}/commits/${CI_PROJECT_NAME}:${CI_BUILD_REF}
  only:
    - master@cloudigrade/frontigrade
  except:
    - chat
    - trigger
  before_script:
    - oc login --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - kontemplate template ocp/test.yaml -i frontigrade | oc apply -f -
    - if ! oc rollout status dc/frontigrade; then oc rollout latest dc/frontigrade && oc rollout status dc/frontigrade; fi;
  environment:
    name: test
    url: https://test.cloudigra.de/

Deploy to Stage:
  stage: deploy
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
    FRONTIGRADE_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
  only:
    - tags@cloudigrade/frontigrade
  except:
    - chat
    - trigger
  before_script:
    - oc login --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - kontemplate template ocp/stage.yaml -i frontigrade | oc apply -f -
    - if ! oc rollout status dc/frontigrade; then oc rollout latest dc/frontigrade && oc rollout status dc/frontigrade; fi;
  environment:
    name: stage
    url: https://stage.cloudigra.de/

### RELEASE STAGE ###
Deploy to Production:
  stage: release
  image: registry.gitlab.com/cloudigrade/images/deploy-container:latest
  variables:
    GIT_STRATEGY: none
    FRONTIGRADE_IMAGE: registry.gitlab.com/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
  only:
    - tags@cloudigrade/frontigrade
  except:
    - chat
    - trigger
  before_script:
    - oc login --token ${KUBE_TOKEN}
    - git clone https://gitlab.com/cloudigrade/shiftigrade.git
    - cd shiftigrade
  script:
    - kontemplate template ocp/prod.yaml -i frontigrade | oc apply -f -
    - if ! oc rollout status dc/frontigrade; then oc rollout latest dc/frontigrade && oc rollout status dc/frontigrade; fi;
  when: manual
  environment:
    name: production
    url: https://www.cloudigra.de/
